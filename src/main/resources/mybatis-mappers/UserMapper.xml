<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boot.security.server.dao.UserDao">

	<sql id="where">
			<if test="params.id != null and params.id != ''">
				and id = #{params.id} 
			</if>
			<if test="params.username != null and params.username != ''">
				and username = #{params.username} 
			</if>
			<if test="params.password != null and params.password != ''">
				and password = #{params.password} 
			</if>
			<if test="params.cinemaCode != null and params.cinemaCode != ''">
				and cinemaCode = #{params.cinemaCode} 
			</if>
			<if test="params.cinemaName != null and params.cinemaName != ''">
				and cinemaName = #{params.cinemaName} 
			</if>
			<if test="params.realName != null and params.realName != ''">
				and realName = #{params.realName} 
			</if>
			<if test="params.createUserId != null and params.createUserId != ''">
				and creaetUserId = #{params.createUserId} 
			</if>
			<if test="params.createTime != null and params.createTime != ''">
				and createTime = #{params.createTime} 
			</if>
			<if test="params.updateUserId != null and params.updateUserId != ''">
				and updateUserId = #{params.updateUserId} 
			</if>
			<if test="params.updateTime != null and params.updateTime != ''">
				and updateTime = #{params.updateTime} 
			</if>
			<if test="params.status != null and params.status != ''">
				and status = #{params.status} 
			</if>
	</sql>
	<sql id="sqlwhere">
		<where>
			<if test="params.username != null and params.username != ''">
				and username = #{params.username} 
			</if>
			<if test="params.realName != null and params.realName != ''">
				and realName = #{params.realName} 
			</if>
			<if test="params.status != null and params.status != ''">
				and status = #{params.status} 
			</if>
		</where>
	</sql>
	
	<sql id="getUserId">
		<where>
			<if test="params.Id !=null and params.Id != ''">
				and id = #{params.Id}
			</if>
		</where>
	</sql>
	
	<sql id="getId">
		<where>
			<if test="id !=null and id !='' ">
				and id = #{id}
			</if>
		</where>
	</sql>
	
	<select id="count" resultType="int">
		select count(1) from sys_user ss
		<if test="params.roleId !='1' ">
		,(select id from sys_user <include refid="getUserId" />) s
		where ss.createUserId = s.id or ss.id = s.id
		<include refid="where"/>
		</if>
		<include refid="sqlwhere"/>
	</select>

	<select id="list" resultType="SysUser">
		select ss.* from sys_user ss
		<if test="params.roleId !='1' ">
		,(select id from sys_user <include refid="getUserId" />) s
		where ss.createUserId = s.id or ss.id = s.id
		<include refid="where"/>
		</if>
		<include refid="sqlwhere"/>
		order by ss.roleId asc
        limit #{offset}, #{limit}
	</select>
	
	<select id="getCinemaName" resultType="SysUser">
		select ss.* from sys_user ss,(select id,cinemacode,cinemaname from sys_user where roleid = 4 and status = 1) s
		 <if test='roleId!=1'>
			,(select id from sys_user <include refid="getId"/> ) sss
		 </if>
			where ss.id = s.id
		 <if test='roleId!=1'>
			and (ss.createuserid = sss.id or ss.id = sss.id)
		 </if>
	</select>
	

	<insert id="saveUserRoles">
		insert into sys_role_user(roleId, userId) values
		<foreach collection="roleIds" item="roleId" separator=",">
			(#{roleId}, #{userId})
		</foreach>
	</insert>

	<update id="update">
		update sys_user t
		<set>
			<if test="username != null">
				username = #{username}, 
			</if>
			<if test="password != null">
				password = #{password}, 
			</if>
			<if test="cinemaCode != null">
				cinemaCode = #{cinemaCode}, 
			</if>
			<if test="cinemaName != null">
				cinemaName = #{cinemaName}, 
			</if>
			<if test="realName != null">
				realName = #{realName}, 
			</if>
			<if test="createUserId != null">
				createUserId = #{createUserId}, 
			</if>
			<if test="createTime != null">
				createTime = #{createTime}, 
			</if>
			<if test="updateUserId != null">
				updateUserId = #{updateUserId}, 
			</if>
			<if test="updateTime != null">
				updateTime = #{updateTime}, 
			</if>
			<if test="status != null">
				status = #{status}, 
			</if>

		</set>

		where t.id = #{id}
	</update>
</mapper>