<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boot.security.server.dao.GoodsDao">

	<sql id="where">
		<where>
			<if test="params.CinemaCode != null and params.CinemaCode != ''">
				and CinemaCode = #{params.CinemaCode} 
			</if>
			<if test="params.GoodsName != null and params.GoodsName != ''">
				and GoodsName like concat('%', #{params.GoodsName}, '%') 
			</if>
			<if test="params.GoodsType != null and params.GoodsType != ''">
				and GoodsType = #{params.GoodsType} 
			</if>
			<if test="params.GoodsStatus != null and params.GoodsStatus != ''">
				and GoodsStatus = #{params.GoodsStatus} 
			</if>
		
		</where>
	</sql>
	

	<select id="count" resultType="int">
		select count(1) from (select g.*,c.Name AS CinemaName	from goods g
							  left join (select * from cinema where isDel=0) c on g.CinemaCode=c.code <include refid="whereByroleId" />) t
		<include refid="where" />
	</select>

	<select id="list" resultType="Goods">
		select * from (select g.*,c.Name AS CinemaName	from goods g
						left join (select * from cinema where isDel=0) c on g.CinemaCode=c.code <include refid="whereByroleId" />) t
		<include refid="where" />
		${params.orderBy}
		limit #{offset}, #{limit}
	</select>
	<sql id="whereByroleId">
		<where>
			<if test="params.roleId == 1 ">
				g.cinemaCode in (select cinemaCode from sys_user) 
			</if>
			<if test="params.roleId != 1 ">
				g.cinemaCode in (select CinemaCode from sys_user sy  where sy.id = #{params.id}  or  sy.createUserId = #{params.roleId})
			</if>
		</where>
	</sql>
	
	
<<<<<<< HEAD
=======
	<select id="getGoodsByCinemaCode" resultType="Goods">
		select * from goods where cinemacode in (
			select ss.cinemacode from sys_user ss,(select id,cinemacode,cinemaname from sys_user where roleid = 4 and status = 1) s
			 <if test='roleId!=1'>
				,(select id from sys_user <include refid="getId"/> ) sss
			 </if>
				where ss.id = s.id
			 <if test='roleId!=1'>
				and (ss.createuserid = sss.id or ss.id = sss.id)
			 </if>
		)
	</select>
	<sql id="getId">
		<where>
			<if test="id !=null and id !='' ">
				and id = #{id}
			</if>
		</where>
	</sql>
	

>>>>>>> branch 'master' of https://github.com/Organ-Weixin/ShenHuaNetSaleSvc.git
	<update id="update">
		update goods t
		<set>
			<if test="Id != null">
				Id = #{Id}, 
			</if>
			<if test="CinemaCode != null">
				CinemaCode = #{CinemaCode}, 
			</if>
			<if test="UserId != null">
				UserId = #{UserId}, 
			</if>
			<if test="GoodsCode != null">
				GoodsCode = #{GoodsCode}, 
			</if>
			<if test="GoodsName != null">
				GoodsName = #{GoodsName}, 
			</if>
			<if test="GoodsType != null">
				GoodsType = #{GoodsType}, 
			</if>
			<if test="StandardPrice != null">
				StandardPrice = #{StandardPrice}, 
			</if>
			<if test="SettlePrice != null">
				SettlePrice = #{SettlePrice}, 
			</if>
			<if test="GoodsPic != null">
				GoodsPic = #{GoodsPic}, 
			</if>
			<if test="StockCount != null">
				StockCount = #{StockCount}, 
			</if>
			<if test="GoodsDesc != null">
				GoodsDesc = #{GoodsDesc}, 
			</if>
			<if test="UnitName != null">
				UnitName = #{UnitName}, 
			</if>
			<if test="ShowSeqNo != null">
				ShowSeqNo = #{ShowSeqNo}, 
			</if>
			<if test="IsDiscount != null">
				IsDiscount = #{IsDiscount}, 
			</if>
			<if test="GoodsKey != null">
				GoodsKey = #{GoodsKey}, 
			</if>
			<if test="GoodsStatus != null">
				GoodsStatus = #{GoodsStatus}, 
			</if>
			<if test="IsRecommand != null">
				IsRecommand = #{IsRecommand}, 
			</if>
			<if test="IsPackage != null">
				IsPackage = #{IsPackage}, 
			</if>

		</set>

		where t.id = #{id}
	</update>

</mapper>
