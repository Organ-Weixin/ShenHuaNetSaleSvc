<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boot.security.server.dao.UserCinemaDao">

	<sql id="where">
		<where>
			<if test="params.Id != null and params.Id != ''">
				and Id = #{params.Id} 
			</if>
			<if test="params.UserId != null and params.UserId != ''">
				and UserId = #{params.UserId} 
			</if>
			<if test="params.CinemaCode != null and params.CinemaCode != ''">
				and CinemaCode = #{params.CinemaCode} 
			</if>
			<if test="params.UserName != null and params.UserName != ''">
				and UserName = #{params.UserName} 
			</if>
			<if test="params.Password != null and params.Password != ''">
				and Password = #{params.Password} 
			</if>
			<if test="params.Fee != null and params.Fee != ''">
				and Fee = #{params.Fee} 
			</if>
			<if test="params.CinemaFee != null and params.CinemaFee != ''">
				and CinemaFee = #{params.CinemaFee} 
			</if>
			<if test="params.PayType != null and params.PayType != ''">
				and PayType = #{params.PayType} 
			</if>
			<if test="params.RealPrice != null and params.RealPrice != ''">
				and RealPrice = #{params.RealPrice} 
			</if>
			<if test="params.ExpDate != null and params.ExpDate != ''">
				and ExpDate = #{params.ExpDate} 
			</if>
		
		</where>
	</sql>

	<select id="count" resultType="int">
		select count(1) from user_cinema t
		<include refid="where" />
	</select>

	<select id="list" resultType="UserCinema">
		select * from user_cinema t
		<include refid="where" />
		${params.orderBy}
		limit #{offset}, #{limit}
	</select>
	
	<!--  根据接入商id查询可访问影院-->
	<select id="countByUserid" resultType="int">
		select count(1)	from (select * from user_cinema where userId=#{userid})uc LEFT JOIN cinema c on uc.CinemaCode=c.Code 
		LEFT JOIN middleware m on m.Id=c.MId
		<include refid="whereBy" />
	</select>

	<select id="listByUserid" resultType="com.boot.security.server.modelView.UserCinemaTitle">
		select uc.Id,uc.UserId,uc.CinemaCode,c.name AS CinemaName,m.Title,uc.PayType,uc.ExpDate 
		from (select * from user_cinema where userId=#{userid})uc LEFT JOIN cinema c on uc.CinemaCode=c.Code 
		LEFT JOIN middleware m on m.Id=c.MId 
		<include refid="whereBy" />
		${params.orderBy}
		limit #{offset}, #{limit}
	</select>
	<sql id="whereBy">
		<where>
			<if test="params.Id != null and params.Id != ''">
				and Id = #{params.Id} 
			</if>
			<if test="params.CinemaName != null and params.CinemaName != ''">
				and c.name = #{params.CinemaName} 
			</if>
			<if test="params.CinemaCode != null and params.CinemaCode != ''">
				and uc.CinemaCode = #{params.CinemaCode} 
			</if>
			<if test="params.Title != null and params.Title != ''">
				and m.Title = #{params.Title} 
			</if>
		</where>
	</sql>
	
	<update id="update">
		update user_cinema t
		<set>
			<if test="Id != null">
				Id = #{Id}, 
			</if>
			<if test="UserId != null">
				UserId = #{UserId}, 
			</if>
			<if test="CinemaCode != null">
				CinemaCode = #{CinemaCode}, 
			</if>
			<if test="UserName != null">
				UserName = #{UserName}, 
			</if>
			<if test="Password != null">
				Password = #{Password}, 
			</if>
			<if test="Fee != null">
				Fee = #{Fee}, 
			</if>
			<if test="CinemaFee != null">
				CinemaFee = #{CinemaFee}, 
			</if>
			<if test="PayType != null">
				PayType = #{PayType}, 
			</if>
			<if test="RealPrice != null">
				RealPrice = #{RealPrice}, 
			</if>
			<if test="ExpDate != null">
				ExpDate = #{ExpDate}, 
			</if>

		</set>

		where t.id = #{id}
	</update>

</mapper>
